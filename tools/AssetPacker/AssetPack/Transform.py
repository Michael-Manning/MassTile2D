# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AssetPack

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Transform(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 20

    # Transform
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Transform
    def Position(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # Transform
    def Rotation(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # Transform
    def Scale(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 12)
        return obj


def CreateTransform(builder, position_x, position_y, rotation, scale_x, scale_y):
    builder.Prep(4, 20)
    builder.Prep(4, 8)
    builder.PrependFloat32(scale_y)
    builder.PrependFloat32(scale_x)
    builder.PrependFloat32(rotation)
    builder.Prep(4, 8)
    builder.PrependFloat32(position_y)
    builder.PrependFloat32(position_x)
    return builder.Offset()
