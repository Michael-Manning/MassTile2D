# automatically generated by the FlatBuffers compiler, do not modify

# namespace: AssetPack

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SpriteRenderer(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 12

    # SpriteRenderer
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SpriteRenderer
    def AtlasIndex(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # SpriteRenderer
    def EntityId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # SpriteRenderer
    def SpriteId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))

def CreateSpriteRenderer(builder, atlasIndex, entityId, spriteId):
    builder.Prep(4, 12)
    builder.PrependUint32(spriteId)
    builder.PrependUint32(entityId)
    builder.PrependInt32(atlasIndex)
    return builder.Offset()
